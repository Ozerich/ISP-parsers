
Перед началом работы обязательно необхоимо изучить выходной формат данных. Он находится
в файле parsers/dataFormat.php. В качестве примера парсинга приведён код для парсинга сайта 
tervolina.ru. Сам парсер находится в файле parsers/sites/drakon/tervolina_ru.php.
Парсер в примере качает сразу всё (что необходимо и не более того): товары, картинки товаров, торговые точки,
новости.

В коде парсера при невозможности скачать страницу либо невозможности отпарсить данные необходимо
вызывать функцию parseError.

Создавать функции вне класса запрещается! Также запрещается делать какие-либо глобальные 
вызовы типа error_reporting или set_time_limit.

Если сайт блокирует слишком частые запросы, то крайне не рекомендуется использовать sleep/usleep.
Нужно использовать в класс парсера добавить следующий код (например для задержки на 0.5 секунды
между скачиваниями страниц):
public function __construct($savePath) 
{ 
	parent::__construct($savePath); 
	$this->httpClient->setRequestsPause (0.5); 
}

-----------------------------------------------------------------------

Пример парсера запускается следующим образом:
1. Зайти в папку с файлом parser_execute.php через консоль
2. Выполнить команду: php -f ./parser_execute.php tervolina
3. В результате создаются файлы:
3.1. ISP_tervolina_ru.html - результат парсинга в формате HTML - всё в одном файле.
3.2. ISP_tervolina_ru.xml  - результат парсинга в формате XML - всё в одном файле.
3.3. parsersData/results/tervolina.ru_items.dat - сериализованный результат парсинга товаров
3.4. parsersData/results/tervolina.ru_physical.dat - сериализованный результат парсинга торговых точек
3.5. parsersData/results/tervolina.ru_news.dat - сериализованный результат парсинга новостей и акций

-----------------------------------------------------------------------

Чтобы создать парсер для сайта необходимо:
1. Скопировать файл parsers/sites/template.php в: 
	parsers/sites/<Ваш ник в нижнем регистре>/<имя сайта>.php
2. Реализовать в получившемся файле необходимый код. 

-----------------------------------------------------------------------

Структура файлов и каталогов:
	parser_execute.php 		- файл-пример для запуска парсера сайта
	parseResult.xsl 		- шаблон для создания HTML-документа по результатам парсинга
	debugFunctions.php 		- функции для отладки парсера: преобразование в HTML, вывод на экран результатов.
	parsersData/results/ 	- каталог куда будут складываться сериализованные результаты парсинга
	parsersData/cache/ 		- сюда сохраняются все скачанные веб-страницы, чтобы при повторном запуске
								парсера не скачивалось одно и то же.
	parsers/addons/ 		- здесь хранятся дополнительные библиотеки, которые могут использовать для более
								удобного парсинга
	parsers/baseClasses/ 	- директория с личными классами разработчиков парсеров.
							Личный класс НЕ НУЖНО создавать, если нет необходимости в 
							каких-то дополнительных общих для всех парсеров функциях.
							Т. е. в большинстве случаев нужно использовать существующий
							класс из файла parsers/baseClasses/drakon.php. 
	parsers/baseClasses/drakon.php - основной базовый класс для парсеров. Необходимо использовать
								в качестве базового класса для парсера именно класс из этого файла.
								Либо создать свой класс в файле  parsers/baseClasses/<ваш ник>.php и
								использовать его. Создавать функции вне класса запрещается!
	parsers/sites/ 			- здесь хранится код парсеров. Файлы с парсерамим необходимо именовать
								следующим образом: parsers/sites/<ваш ник>/<имя сайта>.php
	parsers/sites/template.php - скелет кода парсера.

-----------------------------------------------------------------------
