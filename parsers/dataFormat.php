<?php

/**********************************************************************/

class ParserResultElem
{
	public function __construct ($assoc = null)
	{
		if ( ! is_array ($assoc))
			return;
			
		foreach ($assoc as $field => $value)
			$this->$field = $value;
	}
	
	public function __get ($name)
	{
		if (get_class ($this) == 'ParserCollection' and $name == 'descr')
			return null;
			
		throw new ParserException ("Try to get unknown property '$name' of parse result!");
	}
}

/**********************************************************************/

/* Картинка товара */
class ParserImage extends ParserResultElem
{
	public $id;			/* ID картинки на сайте */
	public $url;		/* URL картинки на сайте */
	public $path;		/* Локальный путь к файлу картинки */
	public $type;		/* Тип картинки (jpg,jpeg,png,gif) */
	public $fname;		/* Имя файла-картинки (если там написан какой-то вменяемый текст) */
}

/**********************************************************************/

/* Товарная позиция */

/* Нигде в строковых полях не должно быть HTML! Только текст. 
 * Если данные есть для какого-то поля, то заполняете. Если нет, то не заполняете.
 * Если есть данные которые не подходят ни к одному полю - то крайне не желательно 
 * их терять, лучше дописать текстом в поле 'descr'.
 * */
class ParserItem extends ParserResultElem
{
	public $id;			/* ID товара на сайте
		* ID товара, коллекции, торговой точки нужны чтобы видеть если позиция пропала с сайта 
		* и чтобы обновлять данные в базе.
		* Поэтому сюда нельзя записывать рандомные числа, а нужно брать из УРЛов. 
		* Например для коллекции:
		* 	Рубашки http://accessorize.ru/children/boys/shirt/ - ID должен быть "children/boys/shirt"
		* 	Товар http://accessorize.ru/children/boys/shirt/62836835/ - ID должен быть "62836835"
		* 	Торговая точка http://accessorize.ru/city/Moskva/rioche/ - ID должен быть "Moskva/rioche" 
			*/
	public $url;		/* URL товара на сайте */
	public $name;		/* Название товара или артикул */
	public $articul;	/* Артикул */
	public $price;		/* Цена товара без скидки (число, никаких пробелов, "р", "руб" не нужно) */
	public $discount;   /* Скидка в процентах */
    public $categ;      /* Название категории. Если используется иерархический путь, то в виде массива */
    public $material;   /* Материал */
    public $brand;		/* Бренд товара (фирма-производитель) */
    public $structure;  /* Состав */
    public $made_in;	/* Страна-производитель */
    public $weight;		/* Вес */
    public $sizes; 		/* Массив значений доступных размеров. Сюда записывать только размеры 
    						одежды/обуви и т. д. Габариты типа ширинаXвысотаXглубина - записывать
    						не нужно. Также сюда НЕ нужно записывать "20 шт", "200 г", "300 мл" - 
    						это всё пишется в 'descr'.
    						Допустимые значения элементов массива 'sizes':
    							1. Число до 60.
    							2. S/L/XL и т. д.
    							3. Диапазон чисел, например: 45-50.
    					 */
    public $colors;		/* Массив RGB/HEX строк с цветами (предпочтительнее), либо массив названий.
    						Т. е. для HEX записывать: #xxxxxx 
    						Для RGB:				  rgb(xxx,xxx,xxx)
    					*/
	public $descr; 		/* Описание товара. Если сюда записываются данные из таблицы типа
							"параметр: значение", то после каждой такой пары должен стоять
							символ перехода на новую строку. 
							"<br>" лучше заменять на "\n".
							Также крайне желательно форматировать текст при помощи "\n",
							чтоб все параметры не сливались в единый поток текста. 
							*/
	public $bStock;		/* Наличие в продаже: 1 или 0. Если на сайте явно не указано,
						   в наличии этот товар или нет, то не заполнять это поле. */
	
	public $images = array (); /* Массив картинок товара (ParserImage) */
}

/**********************************************************************/

/* Нигде в строковых полях не должно быть HTML! Только текст.
 * Коллекция товаров. 
 * !!! Скачивать нужно только последнюю коллекцию если на сайте коллекции идут по годам/сезонам !!!
 * Если на сайте будут предыдущие коллекции - их скачивать не нужно.
 * */
class ParserCollection extends ParserResultElem
{
	public $id; 		/* ID коллекции на сайте. Если нету - сгенерировать по имени.
						   По этому ID будет определяться, появилась-ли новая коллекция
						   на сайт.е
						   Например: http://incity.ru/collection/3/
						   Здесь нужно делать id = "3 ВЕСНА-ЛЕТО 2010", т. к. по этому
						   УРЛу могут выдаваться новые коллекции.
						*/
	public $name;		/* Название коллекции */
	/* public $descr; */ /* ПАРАМЕТР ОТКЛЮЧЕН. ЗАПОЛНЯТЬ НЕ НУЖНО. */
	public $url;		/* URL коллекции на сайте */
	
	public $items = array (); /* Массив товарных позиций (ParserItem) */
}


/**********************************************************************/

/* Торговая точка */

/* Нигде в строковых полях не должно быть HTML! Только текст. 
 * Нужны только торговые точки России + торговые точки городов: Минск, Киев, Харьков.
 * Можно записывать точки по всем городам, что есть на сайте если в этом нет сложности.
 * */
class ParserPhysical extends ParserResultElem
{
	public $id;			/* ID торговой точки на сайте */
	public $city;		/* Город, в котором расположена торговая точка.
						 * Для московской и ленинградском областей
						 * писать "Москва" и "Санкт-Петербург" соответственно.  */
	public $address;	/* Адрес торговой точки без города и без станции метро. 
							Если торговая точка находится
							в ТЦ/ТК/ТРК/ТРЦ/МЕГА и т.д., нужно дописавать инфу о ТЦ в конец адреса.
							*/
	public $phone;		/* Все телефоны торговой точки. */
	public $b_stock;	/* является-ли сток(дисконт)-центром (1 или 0). Значение устанавливается
						   только если эта информация есть на сайте. */
	public $timetable;  /* Режим работы. */
	public $b_closed;	/* Закрыта-ли торговая точка (1 или 0). Значение устанавливается
						   только если эта информация есть на сайте. */ 
}

/**********************************************************************/

/* Акции и новости (не нужно парсить все новости, !!! нужна только 1-ая страница !!!). 
 * Если на сайте есть RSS-поток, идентичный тому, что есть на веб-страницах, 
 * то лучше брать новости из него. 
 * В случае если на сайте есть и акции и новости, парсить нужно оба раздела и сливать в один массив.
 * */
class ParserNews extends ParserResultElem
{
	public $id;				/* ID новости на сайте */
	public $date;			/* Дата размещения новости на сайте в формате ГГГГ-ММ-ДД,
								либо ДД.ММ.ГГГГ. Нули дописывать в день и месяц не
								обязательно. */
	public $contentShort;	/* Краткий текст в HTML-формате (если в анонсе есть картинка,
							   её сюда вставлять не нужно) */
	public $contentFull;	/* Полный текст в HTML-формате */
	
	public $urlShort;		/* URL страницы с кратким текстом новости */
	public $urlFull;		/* URL страницы с полным текстом новости (т. е. для всех записей
								 будет один и тот же урл - откуда взят анонс). */
	public $header;			/* Заголовок новости (берётся либо из анонса, либо из полного
								текста новости). */
}

/**********************************************************************/
